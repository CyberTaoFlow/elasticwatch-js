// Generated by CoffeeScript 1.10.0
(function() {
  var ConsoleReporter, assert, loglevelMock, mockery, reporter;

  mockery = require("mockery");

  assert = require("chai").assert;

  reporter = [][0];

  loglevelMock = {
    debug: function(str) {
      return this.strDebug = str;
    },
    error: function(str) {
      return this.strError = str;
    }
  };

  mockery.enable({
    useCleanCache: true
  });

  mockery.registerMock("loglevel", loglevelMock);

  mockery.registerAllowables(["../src/reporters/console", "../reporter"]);

  ConsoleReporter = require("../src/reporters/console");

  describe("ConsoleReporter", function() {
    beforeEach(function() {
      return reporter = new ConsoleReporter();
    });
    it("should output a log message during construction", function() {
      return assert.include(loglevelMock.strDebug, "creating new instance");
    });
    return it("should log an error when notify is called", function() {
      reporter.notify("mymessage", {
        name: "myname"
      });
      return assert.include(loglevelMock.strError, "'myname' raised alarm: mymessage");
    });
  });

}).call(this);
